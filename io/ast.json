{
  "kind": "Program",
  "body": [
    {
      "kind": "Assignment",
      "variable": {
        "kind": "Identifier",
        "symbol": "x",
        "row": 0,
        "col": 4
      },
      "value": {
        "kind": "NumberLiteral",
        "value": 5,
        "row": 0,
        "col": 8,
        "type": "Number"
      },
      "row": 0,
      "datatype": "let",
      "type": "Number"
    },
    {
      "kind": "Assignment",
      "variable": {
        "kind": "Identifier",
        "symbol": "y",
        "row": 1,
        "col": 4
      },
      "value": {
        "kind": "NumberLiteral",
        "value": 12,
        "row": 1,
        "col": 8,
        "type": "Number"
      },
      "datatype": "let",
      "type": "Number"
    },
    {
      "kind": "Assignment",
      "variable": {
        "kind": "Identifier",
        "symbol": "some",
        "row": 3,
        "col": 4
      },
      "value": {
        "kind": "FunctionLiteral",
        "parameters": {
          "kind": "ParameterList",
          "values": [
            {
              "kind": "Parameter",
              "datatype": "number",
              "variable": "val",
              "row": 3,
              "col": 11,
              "type": "Number"
            }
          ],
          "row": 3,
          "col": 11
        },
        "body": [
          {
            "kind": "IfStatement",
            "test": {
              "kind": "Comparator",
              "left": {
                "kind": "Identifier",
                "symbol": "y",
                "row": 4,
                "col": 7
              },
              "right": {
                "kind": "Identifier",
                "symbol": "x",
                "row": 4,
                "col": 11
              },
              "operator": "<",
              "row": 4,
              "col": 9,
              "type": "Boolean"
            },
            "body": [
              {
                "kind": "Return",
                "value": {
                  "kind": "BooleanLiteral",
                  "value": true,
                  "row": 5,
                  "col": 15,
                  "type": "Boolean"
                },
                "row": 5,
                "col": 8,
                "type": "Boolean"
              }
            ],
            "next": {
              "kind": "ElseClause",
              "body": [
                {
                  "kind": "Return",
                  "value": {
                    "kind": "Comparator",
                    "left": {
                      "kind": "Identifier",
                      "symbol": "x",
                      "row": 7,
                      "col": 15
                    },
                    "right": {
                      "kind": "Identifier",
                      "symbol": "val",
                      "row": 7,
                      "col": 19
                    },
                    "operator": "<",
                    "row": 7,
                    "col": 17,
                    "type": "Boolean"
                  },
                  "row": 7,
                  "col": 8,
                  "type": "Boolean"
                }
              ],
              "row": 6,
              "col": 6,
              "type": "Unknown"
            },
            "type": "Unknown"
          }
        ],
        "row": 3,
        "col": 24,
        "type": "Function",
        "scope": [
          {
            "name": "val",
            "type": "Number"
          }
        ],
        "return": "Boolean"
      },
      "datatype": "let",
      "type": "Function"
    },
    {
      "kind": "Assignment",
      "variable": {
        "kind": "Identifier",
        "symbol": "k",
        "row": 11,
        "col": 4
      },
      "value": {
        "kind": "FunctionCall",
        "parameters": [
          {
            "kind": "NumberLiteral",
            "value": 8,
            "row": 11,
            "col": 13,
            "type": "Number"
          }
        ],
        "caller": {
          "kind": "Identifier",
          "symbol": "some",
          "row": 11,
          "col": 8
        },
        "row": 11,
        "col": 8,
        "type": "Unknown"
      },
      "datatype": "let",
      "type": "Unknown"
    }
  ],
  "scope": [
    {
      "name": "x"
    },
    {
      "name": "y"
    },
    {
      "name": "some"
    },
    {
      "name": "k"
    }
  ]
}